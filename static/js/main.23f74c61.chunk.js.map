{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","split","join","filter","element","Alerts","height","alert","word","lower","charAt","slice","capatlize","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.23f74c61.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n  return (\n          <nav className={`navbar navbar-expand-lg bg-${props.mode}`}>\n          <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n          </li>\n          <li className=\"nav-item\">\n          {/* <Link className=\"nav-link\" to =\"/about\">About</Link> */}\n          </li> \n          </ul>\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark</label>\n          </div>\n          </div>\n          </div>\n          </nav>\n  )\n}\n\nNavbar.propTypes = {\n    title : PropTypes.string,\n}","import React , {useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick = () => {\n        // console.log(\"Upper-Case was clicked\" + text);\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to Uppercase\" , \"success\");\n    }\n    const handleLowClick = () => {\n      // console.log(\"Upper-Case was clicked\" + text);\n      let newText = text.toLowerCase();\n      setText(newText)\n      props.showAlert(\"Converted to LowerCase\" , \"success\");\n    }\n    const handleClearText = () => {\n      // console.log(\"Upper-Case was clicked\" + text);\n      let newText = \"\";\n      setText(newText)\n      props.showAlert(\"Text Clear\" , \"success\");\n    }\n    const removeExtraSpaces = () => {\n      let newText = text.split(/[ ]+/);\n      setText(newText.join(\" \"));   \n      props.showAlert(\"Extra Spaces clear\" , \"success\");\n    }\n\n    const speak = () => {\n      let msg = new SpeechSynthesisUtterance();\n      msg.text = text;\n      window.speechSynthesis.speak(msg);\n    }\n\n    const handleOnChange = (event) => {\n        // console.log(\"On Change\"); these are console output\n        setText(event.target.value)\n    }\n    const[text,setText] = useState('Enter text here');\n\n  return (\n    <>\n    <div className=  \"container\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style = {{backgroundColor: props.mode === 'dark'?'#13466e':'white' , color: props.mode === 'dark'?'white':'#042743'}} id=\"MyBox\" rows=\"8\"></textarea>\n        </div>\n        <button disabled = {text.length===0}  className=\"btn btn-primary mx-1 my-1 \" onClick={handleUpClick}>Convert to upperCase</button>\n        <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick}>Convert to lowerCase</button>\n        <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearText}>Clear text</button>\n        <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={speak}>Speak</button>\n        <button disabled = {text.length===0} className=\"btn btn-primary \" onClick={removeExtraSpaces}>Remove Extra Spaces</button>\n    </div>\n    <div className=\"container my-2\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\n      <h1>Your text summary</h1>\n      <p>{text.split(/\\s+/).filter((element)=> {return element.length!==0}).length} and {text.length }</p>\n      <p>{0.08 * text.split(\" \").length} Minutes read</p>\n      <h2>Preview</h2>\n      <p>{text.length > 0 ? text:\"Enter something to preview it here and Enable the Buttons\"}</p>\n    </div>\n    </>\n  )\n}\n\n","import React from 'react'\n\nexport default function Alerts(props) {\n  const capatlize = (word) => {\n      const lower = word.toLowerCase();\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\n  }\n  return (\n      < div style={{height : '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{capatlize(props.alert.type)}</strong>:{props.alert.msg}\n        </div>}\n        </div>\n  )\n}\n","import './App.css';\nimport React , { useState } from 'react';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alerts from './components/Alerts';    \n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode , setMode] = useState (`light`);\n  const [alert , setAlert] = useState (null);\n\n  const showAlert = (message , type) => {\n      setAlert({\n        msg : message,\n        type : type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      } , 2000);\n  }\n\n  const toggleMode = () => {\n    if(mode === `light`){\n      setMode (`dark`);\n      document.body.style.backgroundColor = `#042743`;\n      showAlert(\"Dark Mode has been Enabled\" , \"success\");\n    }\n    else{\n      setMode (`light`);\n      document.body.style.backgroundColor = `white`;\n      showAlert(\"Light Mode has been Enabled\" , \"success\");\n    }\n  }\n  return (\n    <> \n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode = {mode} toggleMode = {toggleMode}/>\n      <Alerts alert = {alert}/>\n      <div className=\"container my-3\"> \n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading = \"Enter the Text to Analyze\" mode = {mode} />\n          {/* </Route> */}\n      {/* </Switch> */}\n      </div>\n    {/* </Router>  */}\n\n    </>\n  );\n}\n\nexport default App;\n\n//<TextForm showAlert={showAlert} heading = \"Enter the Text to Analyze\" mode = {mode} />","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}